TD Sockets
Reçoit le num du fragment
Renvoie : “voici le fragment num servi par le serveur i”

Serveur Usi


public class USi { 
  public static void main (String args[]) { 
  try {
	ServerSocket ss = new ServerSocket (args[1]); // à convertir en entier
	while(true) {
		Socket s = ss.accept();
		InputStream is = s.getInputStream();
  		OutputStream os = s.getOutputStream();
		ObjectInputStream ois = new ObjectInputStream(is);  
 		ObjectOutputStream oos = new ObjectOutputStream(os);
		int frag = (int) ois.readObject();
		oos.writeObject ("here is fragment " + frag + " served by US" + argv[0]);
		os.close(); is.close(); s.close();
	}
   catch (Exception e) ….}}







Client UC
public class UC extends Thread {
	static int nbs = 3; static int ports[] = {8081,8082,8083};
	static String document[] = new String[nbs];

	int frag;
	public UC (int i) { frag = i; }

	public void run() { 
  	    try {
		Socket con = new Socket("localhost", ports[frag]);
		OutputStream os = con.getOutputStream();
  		InputStream is = con.getInputStream(); ObjectOutputStream oos = new ObjectOutputStream(os);

  		ObjectInputStream ois = new ObjectInputStream(is);
  		oos.writeObject(frag);
  		document[frag] = (String)ois.readObject();
  		os.close(); is.close(); con.close();
  	   } catch (Exception e) 
		{e.printStackTrace();}
}

public static void main (String args[]) {
    try {	
	Thread t[] = new Thread[nbs];
	for (i=0; i<nbs; i++) {
		t[i] = new UC(i);str 
		t[i].start(); }
	for (i=0; i<nbs ; i++) t[i].join();    //attendre la fin de chaque thread
	for (i=0; i<nbs; i++) System.out.println(document[i]);

    } catch …
Exercice 2

public class LB extends Thread {
static int ports[] = {8081,8082};
  static int nbHosts = 2;
  static Random rand = new Random();

Socket input;

public LB (Socket s) {
	  input = s;
}

public void run() {
    try {
  		int i = rand.nextInt(nbHosts);
		Socket output = new Socket(hosts[i], ports[i]);
		InputStream clt_in_stream = input.getInputStream();
  		OutputStream clt_out_stream = 
input.getOutputStream();
  		OutputStream srv_out_stream = output.getOutputStream();
  		InputStream srv_in_stream = output.getInputStream();

		byte[] buffer = new byte[8192];
		int bytesRead = clt_in_stream.read(buffer);
		srv_out_stream.write(buffer, 0, bytesRead);
		bytesRead = srv_in_stream.read(buffer);
		clt_out_stream.write(buffer, 0, bytesRead);

   }

    } catch (Exception e) 	
     	{e.printStackTrace();}

public static void main(String args[]) {
  try {	
	ServerSocket ss = new  ServerSocket(8080);
	while (true) {
  		Thread t = new LB(ss.accept());
		t.start();
}

  } catch (Exception e)
  { e.printStackTrace();}
}


